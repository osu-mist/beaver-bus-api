swagger: '2.0'
info:
  title: Beaver Bus API
  description: Get Corvallis campus bus routes, stops, ETAs, and current GPS locations.
  version: '1.0'
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/beaver-bus-api
schemes:
  - https
host: api.oregonstate.edu
basePath: /v1/beaverbus
produces:
  - application/json
security:
  - OAuth2:
    - full
paths:
  /routes:
    get:
      description: "Get bus routes."
      operationId: getRoutes
      parameters:
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/RoutesResultObject'
  /routes/{routeID}:
    get:
      description: "Get bus route by routeID"
      operationId: getRouteByID
      parameters:
        - in: path
          name: routeID
          required: true
          description: "routeID for route"
          type: string
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/RouteResultObject'
        404:
          description: Route not found
          schema:
            $ref: "#/definitions/Error"
  /vehicles:
    get:
      description: "Get current locations of vehicles"
      operationId: getVehicles
      parameters:
        - in: query
          name: routeID
          required: false
          description: "Filter by route"
          type: string
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/VehiclesResultObject'
  /vehicles/{vehicleID}:
    get:
      description: "Get current location of a vehicle by vehicleID"
      operationId: getVehicleByID
      parameters:
        - in: path
          name: vehicleID
          required: true
          description: "vehicleID for vehicle"
          type: string
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/VehicleResultObject'
        404:
          description: Vehicle not found
          schema:
            $ref: "#/definitions/Error"
  /arrivals:
    get:
      description: Get arrival times for stops
      operationId: getArrivals
      parameters:
        - in: query
          name: routeID
          required: false
          description: "Filter by routeID"
          type: string
        - in: query
          name: stopId
          required: false
          description: "Filter by stopID"
          type: string
        - $ref: '#/parameters/pretty'
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ArrivalsResultObject'
        404:
          description: No arrivals match the query
          schema:
            $ref: "#/definitions/Error"
parameters:
  pretty:
    name: pretty
    in: query
    type: boolean
    required: false
    description: If true, JSON response will be pretty-printed
  authorization:
    name: Authorization
    in: header
    type: string
    required: true
    description: '"Bearer [token]" where [token] is your OAuth2 access token'
definitions:
  RoutesResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/RouteResourceObject"
  RouteResultObject:
    properties:
      data:
        $ref: "#/definitions/RouteResourceObject"
  RouteResourceObject:
    properties:
      id:
        type: string
        description: routeID
      type:
        type: string
        description: route
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        properties:
          description:
            type: string
            description: Description of bus route
          encodedPolyline:
            type: string
            description: Encoded polyline for mapping route using Google's mapping APIs
          mapColor:
            type: string
            description: Hexadecimal color value for route line on map
          latitude:
            type: number
            format: float
            description: Default latitude to go to when selecting route on map
          longitude:
            type: number
            format: float
            description: Default longitude to go to when selecting route on map
          zoomLevel:
            type: integer
            description: Default zoom level to use when selecting route on map
          stops:
            type: array
            description: Locations where the bus stops along the route. Stops are in the order at which they are arrived at.
            items:
              properties:
                stopID:
                  type: string
                description:
                  type: string
                latitude:
                  type: number
                  format: float
                  description: Latitude of stop
                longitude:
                  type: number
                  format: float
                  description: Longitude of stop
  VehiclesResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/VehicleResourceObject"
  VehicleResultObject:
    properties:
      data:
        $ref: "#/definitions/VehicleResourceObject"
  VehicleResourceObject:
    properties:
      id:
        type: string
        description: vehicleID
      type:
        type: string
        description: vehicle
      links:
        $ref: "#/definitions/SelfLink"
      attributes:
        properties:
          routeID:
            type: string
            description: routeID for route of vehicle
          name:
            type: string
            description: Name of vehicle
          latitude:
            type: number
            format: float
            description: Latitude of vehicle's position
          longitude:
            type: number
            format: float
            description: Longitude of vehicle's position
          speed:
            type: number
            format: float
            description: Speed of vehicle (MPH)
          heading:
            type: integer
            description: Compass heading of vehicle (0-359, where 0 is north)
          lastUpdated:
            type: string
            format: date
            description: Time at which vehicle's position was updated
          onRoute:
            type: boolean
            description: Whether the vehicle is on its route
          delayed:
            type: boolean
            description: Whether the vehicle is delayed
  ArrivalsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/ArrivalResourceObject"
  ArrivalResultObject:
    properties:
      data:
        $ref: "#/definitions/ArrivalResourceObject"
  ArrivalResourceObject:
    properties:
      id:
        type: string
        description: arrivalID
      type:
        type: string
        description: arrival
      links:
        properties:
          route:
            type: string
            format: url
            description: Link to route resource associated with arrival
          self:
            type: string
            format: url
            description: Self link of arrival in format /arrivals?routeID=x&stopID=y
      attributes:
        properties:
          routeID:
            type: string
            description: routeID for route of vehicle
          stopID:
            type: string
            description: Unique identifier for a stop
          arrivals:
            type: array
            description: Times that this route is arriving at this stop
            items:
              properties:
                eta:
                  type: string
                  format: date
                  description: Time and date that route is expected to arrive at stop
                vehicleID:
                  type: string
                  description: vehicleID of vehicle that is arriving
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self link of resource
  Error:
    properties:
      status:
        type: integer
        description: HTTP status code.
      developerMessage:
        type: string
        description: An error string aimed at developers.
      userMesage:
        type: string
        description: An error string aimed at end users.
      code:
        type: integer
        description: Error code.
      details:
        type: string
        description: A link to further information about the error.
